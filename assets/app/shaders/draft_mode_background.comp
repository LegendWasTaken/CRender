#version 440

layout (local_size_x = 8, local_size_y = 8) in;
layout (binding = 0, rgba8) uniform image2D img_output;
layout (binding = 0) uniform sampler2D background;

#define TARGET_PIXEL gl_GlobalInvocationID

uniform ivec2 scene_size;

uniform mat4 camera;
uniform float aspect_correction;
uniform float fov;
uniform int camera_mode;

void main ()
{
    vec2 nc = vec2(TARGET_PIXEL.xy) / vec2(scene_size);

    vec3 dir = vec3(0);

    if (camera_mode == 0)
    {
        float u = (2.0f * nc.x - 1.0f) * aspect_correction;
        float v = (2.0f * nc.y - 1.0f);
        float w = 1.0f / tan(0.5f * radians(fov));

        dir = normalize(camera * vec4(u, v, w, 0.0f)).xyz;
    }
    else if (camera_mode == 1)
    {
        dir = normalize(camera[2].xyz);
    }


    vec2 uv = vec2(
        0.5 + atan(dir.z, dir.x) / (2 * 3.1415f),
        0.5 - asin(dir.y) / 3.1415f);

    imageStore(img_output, ivec2(TARGET_PIXEL), texture(background, uv));
}
